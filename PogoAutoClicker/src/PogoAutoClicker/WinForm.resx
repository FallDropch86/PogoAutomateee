<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>